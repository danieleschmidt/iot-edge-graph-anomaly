apiVersion: v1
kind: ConfigMap
metadata:
  name: iot-edge-anomaly-config
  namespace: iot-edge-anomaly
  labels:
    app: iot-edge-anomaly
    component: config
data:
  config.yaml: |
    # TERRAGON IoT Edge Anomaly Detection v4.0 Configuration
    model:
      input_size: 5
      hidden_size: 64
      num_layers: 2
      dropout: 0.1
      sequence_length: 20
    
    anomaly_threshold: 0.5
    
    processing:
      loop_interval: 5.0
      max_iterations: null
      batch_size: 32
    
    health:
      memory_threshold_mb: 100
      cpu_threshold_percent: 80
    
    monitoring:
      export_interval: 60
      metrics_port: 8080
      enable_prometheus: true
      enable_opentelemetry: true
    
    performance:
      enable_optimization: true
      num_workers: 2
    
    circuit_breaker:
      failure_threshold: 5
      recovery_timeout: 60.0
      timeout: 10.0
    
    # Auto-scaling configuration
    auto_scaling:
      enabled: true
      min_instances: 1
      max_instances: 10
      target_cpu_utilization: 70
      target_memory_utilization: 80
      scale_up_cooldown: 300
      scale_down_cooldown: 600
    
    # Security settings
    security:
      enable_tls: true
      enable_rbac: true
      max_request_size: 10485760  # 10MB
    
    # Compliance settings
    compliance:
      gdpr_enabled: true
      data_retention_days: 365
      audit_logging: true
      encryption_at_rest: true
  
  logging.yaml: |
    version: 1
    formatters:
      standard:
        format: '%(asctime)s [%(levelname)s] %(name)s: %(message)s'
      json:
        format: '{"timestamp": "%(asctime)s", "level": "%(levelname)s", "logger": "%(name)s", "message": "%(message)s"}'
    handlers:
      console:
        class: logging.StreamHandler
        level: INFO
        formatter: json
        stream: ext://sys.stdout
      file:
        class: logging.handlers.RotatingFileHandler
        level: DEBUG
        formatter: standard
        filename: /app/logs/iot-edge-anomaly.log
        maxBytes: 10485760
        backupCount: 5
    loggers:
      iot_edge_anomaly:
        level: DEBUG
        handlers: [console, file]
        propagate: false
    root:
      level: INFO
      handlers: [console]
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: iot-edge-anomaly-prometheus-config
  namespace: iot-edge-anomaly
  labels:
    app: iot-edge-anomaly
    component: monitoring
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s
    
    rule_files:
      - "/etc/prometheus/rules/*.yml"
    
    scrape_configs:
      - job_name: 'iot-edge-anomaly'
        static_configs:
          - targets: ['iot-edge-anomaly-service:9090']
        metrics_path: /metrics
        scrape_interval: 30s
        scrape_timeout: 10s
      
      - job_name: 'kubernetes-apiservers'
        kubernetes_sd_configs:
          - role: endpoints
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
          - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
            action: keep
            regex: default;kubernetes;https
      
      - job_name: 'kubernetes-nodes'
        kubernetes_sd_configs:
          - role: node
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)
          - target_label: __address__
            replacement: kubernetes.default.svc:443
          - source_labels: [__meta_kubernetes_node_name]
            regex: (.+)
            target_label: __metrics_path__
            replacement: /api/v1/nodes/${1}/proxy/metrics
    
    alerting:
      alertmanagers:
        - static_configs:
            - targets: []
  
  alert_rules.yml: |
    groups:
      - name: iot-edge-anomaly.rules
        rules:
          - alert: HighCPUUsage
            expr: rate(process_cpu_seconds_total{job="iot-edge-anomaly"}[5m]) * 100 > 80
            for: 2m
            labels:
              severity: warning
            annotations:
              summary: "High CPU usage detected"
              description: "IoT Edge Anomaly Detection CPU usage is above 80% for more than 2 minutes"
          
          - alert: HighMemoryUsage
            expr: process_resident_memory_bytes{job="iot-edge-anomaly"} / 1024 / 1024 > 400
            for: 2m
            labels:
              severity: warning
            annotations:
              summary: "High memory usage detected"
              description: "IoT Edge Anomaly Detection memory usage is above 400MB"
          
          - alert: HighAnomalyRate
            expr: rate(anomalies_detected_total{job="iot-edge-anomaly"}[5m]) > 0.1
            for: 5m
            labels:
              severity: critical
            annotations:
              summary: "High anomaly detection rate"
              description: "Anomaly detection rate is above 10% for more than 5 minutes"
          
          - alert: ModelInferenceLatency
            expr: histogram_quantile(0.95, rate(model_inference_duration_seconds_bucket{job="iot-edge-anomaly"}[5m])) > 1
            for: 2m
            labels:
              severity: warning
            annotations:
              summary: "High model inference latency"
              description: "95th percentile inference latency is above 1 second"
          
          - alert: PodCrashLooping
            expr: rate(kube_pod_container_status_restarts_total{namespace="iot-edge-anomaly"}[5m]) > 0
            for: 2m
            labels:
              severity: critical
            annotations:
              summary: "Pod is crash looping"
              description: "Pod {{ $labels.pod }} in namespace {{ $labels.namespace }} is restarting frequently"