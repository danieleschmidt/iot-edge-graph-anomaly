apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: iot-edge-anomaly-ingress
  namespace: iot-edge-anomaly
  labels:
    app: iot-edge-anomaly
    app.kubernetes.io/name: iot-edge-anomaly
    app.kubernetes.io/component: ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "30"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    # Security headers
    nginx.ingress.kubernetes.io/configuration-snippet: |
      add_header X-Content-Type-Options "nosniff" always;
      add_header X-Frame-Options "DENY" always;
      add_header X-XSS-Protection "1; mode=block" always;
      add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
      add_header Referrer-Policy "strict-origin-when-cross-origin" always;
      add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline';" always;
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - iot-edge-anomaly.terragon.ai
    - api.iot-edge-anomaly.terragon.ai
    - monitoring.iot-edge-anomaly.terragon.ai
    secretName: iot-edge-anomaly-tls
  rules:
  - host: iot-edge-anomaly.terragon.ai
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: iot-edge-anomaly-service
            port:
              number: 8000
      - path: /health
        pathType: Exact
        backend:
          service:
            name: iot-edge-anomaly-service
            port:
              number: 8080
  - host: api.iot-edge-anomaly.terragon.ai
    http:
      paths:
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: iot-edge-anomaly-service
            port:
              number: 8000
      - path: /v1
        pathType: Prefix
        backend:
          service:
            name: iot-edge-anomaly-service
            port:
              number: 8000
  - host: monitoring.iot-edge-anomaly.terragon.ai
    http:
      paths:
      - path: /metrics
        pathType: Exact
        backend:
          service:
            name: iot-edge-anomaly-service
            port:
              number: 9090
---
apiVersion: v1
kind: Secret
metadata:
  name: iot-edge-anomaly-tls
  namespace: iot-edge-anomaly
  labels:
    app: iot-edge-anomaly
    app.kubernetes.io/name: iot-edge-anomaly
    app.kubernetes.io/component: tls
type: kubernetes.io/tls
data:
  # These would be populated by cert-manager or manually
  tls.crt: ""
  tls.key: ""