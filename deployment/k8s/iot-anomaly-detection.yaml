# Kubernetes deployment manifests for IoT Edge Anomaly Detection
apiVersion: v1
kind: Namespace
metadata:
  name: iot-edge-anomaly
  labels:
    app.kubernetes.io/name: iot-edge-anomaly
    app.kubernetes.io/part-of: iot-platform
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: iot-anomaly-config
  namespace: iot-edge-anomaly
  labels:
    app.kubernetes.io/name: iot-edge-anomaly
data:
  production.yaml: |
    # Production configuration for IoT Edge Anomaly Detection
    model:
      input_size: 5
      hidden_size: 64
      num_layers: 2
      dropout: 0.1
      sequence_length: 20
      
    processing:
      loop_interval: 5.0
      max_iterations: null
      
    anomaly_threshold: 0.5
    
    health:
      memory_threshold_mb: 100
      cpu_threshold_percent: 80
      
    circuit_breaker:
      failure_threshold: 5
      recovery_timeout: 60.0
      timeout: 10.0
      
    monitoring:
      otlp_endpoint: "http://otel-collector:4317"
      metrics_interval: 30
      export_timeout: 10
      
    performance:
      enable_optimization: true
      cache_size_mb: 50
      max_batch_size: 32
      
    security:
      enable_authentication: true
      protection_level: "medium"
      max_requests_per_hour: 1000
---
apiVersion: v1
kind: Secret
metadata:
  name: iot-anomaly-secrets
  namespace: iot-edge-anomaly
  labels:
    app.kubernetes.io/name: iot-edge-anomaly
type: Opaque
data:
  # Base64 encoded secrets - replace with actual values
  secret-key: "YOUR_BASE64_ENCODED_SECRET_KEY"
  auth-token: "YOUR_BASE64_ENCODED_AUTH_TOKEN"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: iot-anomaly-detection
  namespace: iot-edge-anomaly
  labels:
    app.kubernetes.io/name: iot-edge-anomaly
    app.kubernetes.io/component: detector
    app.kubernetes.io/version: "v1.0.0"
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: iot-edge-anomaly
      app.kubernetes.io/component: detector
  template:
    metadata:
      labels:
        app.kubernetes.io/name: iot-edge-anomaly
        app.kubernetes.io/component: detector
        app.kubernetes.io/version: "v1.0.0"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - name: iot-anomaly-detector
        image: terragon/iot-edge-anomaly:v1.0.0
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        - name: metrics
          containerPort: 8081
          protocol: TCP
        env:
        - name: IOT_ANOMALY_CONFIG
          value: "/app/config/production.yaml"
        - name: LOG_LEVEL
          value: "INFO"
        - name: PYTHONUNBUFFERED
          value: "1"
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: iot-anomaly-secrets
              key: secret-key
        - name: AUTH_TOKEN
          valueFrom:
            secretKeyRef:
              name: iot-anomaly-secrets
              key: auth-token
        resources:
          requests:
            memory: "64Mi"
            cpu: "100m"
          limits:
            memory: "128Mi"
            cpu: "250m"
        volumeMounts:
        - name: config-volume
          mountPath: /app/config
          readOnly: true
        - name: cache-volume
          mountPath: /app/cache
        - name: logs-volume
          mountPath: /app/logs
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          capabilities:
            drop:
            - ALL
      volumes:
      - name: config-volume
        configMap:
          name: iot-anomaly-config
          defaultMode: 0644
      - name: cache-volume
        emptyDir:
          sizeLimit: 50Mi
      - name: logs-volume
        emptyDir:
          sizeLimit: 100Mi
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      nodeSelector:
        kubernetes.io/arch: amd64
      tolerations:
      - key: "edge-node"
        operator: "Equal"
        value: "true"
        effect: "NoSchedule"
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - iot-edge-anomaly
              topologyKey: kubernetes.io/hostname
---
apiVersion: v1
kind: Service
metadata:
  name: iot-anomaly-service
  namespace: iot-edge-anomaly
  labels:
    app.kubernetes.io/name: iot-edge-anomaly
    app.kubernetes.io/component: service
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 80
    targetPort: 8080
    protocol: TCP
  - name: metrics
    port: 8081
    targetPort: 8081
    protocol: TCP
  selector:
    app.kubernetes.io/name: iot-edge-anomaly
    app.kubernetes.io/component: detector
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: iot-anomaly-netpol
  namespace: iot-edge-anomaly
  labels:
    app.kubernetes.io/name: iot-edge-anomaly
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: iot-edge-anomaly
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - protocol: TCP
      port: 8080
    - protocol: TCP
      port: 8081
  - from:
    - namespaceSelector:
        matchLabels:
          name: iot-platform
    ports:
    - protocol: TCP
      port: 8080
  egress:
  - to:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - protocol: TCP
      port: 4317  # OTLP
  - to: []  # Allow DNS resolution
    ports:
    - protocol: UDP
      port: 53
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: iot-anomaly-pdb
  namespace: iot-edge-anomaly
  labels:
    app.kubernetes.io/name: iot-edge-anomaly
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: iot-edge-anomaly
      app.kubernetes.io/component: detector
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: iot-anomaly-hpa
  namespace: iot-edge-anomaly
  labels:
    app.kubernetes.io/name: iot-edge-anomaly
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: iot-anomaly-detection
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60