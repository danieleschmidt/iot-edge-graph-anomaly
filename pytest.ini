[tool:pytest]
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --cov=src/iot_edge_anomaly
    --cov-report=term-missing:skip-covered
    --cov-report=html:htmlcov
    --cov-report=xml:coverage.xml
    --cov-report=json:coverage.json
    --cov-fail-under=85
    --cov-branch
    --junitxml=test-results.xml
    --html=test-report.html
    --self-contained-html
    --durations=10
    --maxfail=5
    --disable-warnings
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    error::pytest.PytestUnraisableExceptionWarning
markers =
    unit: Unit tests - fast tests that don't require external dependencies
    integration: Integration tests - tests that involve multiple components
    e2e: End-to-end tests - tests that exercise the full system
    slow: Slow running tests that may take several minutes
    gpu: Tests that require GPU acceleration
    network: Tests that require network access
    docker: Tests that require Docker runtime
    security: Security-focused tests
    performance: Performance and benchmark tests
    smoke: Smoke tests for basic functionality
    regression: Regression tests for known issues
    flaky: Tests that may be flaky and require retry
    experimental: Tests for experimental features
    requires_data: Tests that require external data files
    ml_model: Tests specific to machine learning models