version: '3.8'

services:
  iot-edge-anomaly:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: iot-edge-anomaly-detector
    ports:
      - "8080:8080"
    environment:
      - LOG_LEVEL=INFO
      - METRICS_ENABLED=true
      - DEVICE=cpu
      - PROMETHEUS_ENDPOINT=http://prometheus:9090
      - OTLP_ENDPOINT=http://jaeger:4317
    volumes:
      - ./config:/app/config:ro
      - ./data:/app/data:ro
      - ./logs:/app/logs
    depends_on:
      - prometheus
      - jaeger
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import iot_edge_anomaly; print('OK')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 100M
          cpus: '0.25'
        reservations:
          memory: 50M
          cpus: '0.1'

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    depends_on:
      - prometheus
    restart: unless-stopped

  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    ports:
      - "16686:16686"
      - "14268:14268"
      - "4317:4317"
      - "4318:4318"
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    restart: unless-stopped

  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes

volumes:
  prometheus_data:
  grafana_data:
  redis_data:

networks:
  default:
    name: iot-anomaly-network